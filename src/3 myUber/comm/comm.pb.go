// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: comm/comm.proto

package comm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rider         string `protobuf:"bytes,1,opt,name=rider,proto3" json:"rider,omitempty"`
	StartLocation string `protobuf:"bytes,2,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   string `protobuf:"bytes,3,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
}

func (x *RideRequest) Reset() {
	*x = RideRequest{}
	mi := &file_comm_comm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideRequest) ProtoMessage() {}

func (x *RideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideRequest.ProtoReflect.Descriptor instead.
func (*RideRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{0}
}

func (x *RideRequest) GetRider() string {
	if x != nil {
		return x.Rider
	}
	return ""
}

func (x *RideRequest) GetStartLocation() string {
	if x != nil {
		return x.StartLocation
	}
	return ""
}

func (x *RideRequest) GetEndLocation() string {
	if x != nil {
		return x.EndLocation
	}
	return ""
}

type RideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId  int32 `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RideResponse) Reset() {
	*x = RideResponse{}
	mi := &file_comm_comm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideResponse) ProtoMessage() {}

func (x *RideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideResponse.ProtoReflect.Descriptor instead.
func (*RideResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{1}
}

func (x *RideResponse) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

func (x *RideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RideStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId int32 `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *RideStatusRequest) Reset() {
	*x = RideStatusRequest{}
	mi := &file_comm_comm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusRequest) ProtoMessage() {}

func (x *RideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusRequest.ProtoReflect.Descriptor instead.
func (*RideStatusRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{2}
}

func (x *RideStatusRequest) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

type RideStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RideStatusResponse) Reset() {
	*x = RideStatusResponse{}
	mi := &file_comm_comm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusResponse) ProtoMessage() {}

func (x *RideStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusResponse.ProtoReflect.Descriptor instead.
func (*RideStatusResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{3}
}

func (x *RideStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DriverAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
}

func (x *DriverAssignmentRequest) Reset() {
	*x = DriverAssignmentRequest{}
	mi := &file_comm_comm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAssignmentRequest) ProtoMessage() {}

func (x *DriverAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAssignmentRequest.ProtoReflect.Descriptor instead.
func (*DriverAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{4}
}

func (x *DriverAssignmentRequest) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

type DriverAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId int32 `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *DriverAssignmentResponse) Reset() {
	*x = DriverAssignmentResponse{}
	mi := &file_comm_comm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAssignmentResponse) ProtoMessage() {}

func (x *DriverAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAssignmentResponse.ProtoReflect.Descriptor instead.
func (*DriverAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{5}
}

func (x *DriverAssignmentResponse) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

type DriverAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId int32  `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	Driver string `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
}

func (x *DriverAcceptRequest) Reset() {
	*x = DriverAcceptRequest{}
	mi := &file_comm_comm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAcceptRequest) ProtoMessage() {}

func (x *DriverAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAcceptRequest.ProtoReflect.Descriptor instead.
func (*DriverAcceptRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{6}
}

func (x *DriverAcceptRequest) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

func (x *DriverAcceptRequest) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

type DriverAcceptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverAcceptResponse) Reset() {
	*x = DriverAcceptResponse{}
	mi := &file_comm_comm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAcceptResponse) ProtoMessage() {}

func (x *DriverAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAcceptResponse.ProtoReflect.Descriptor instead.
func (*DriverAcceptResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{7}
}

func (x *DriverAcceptResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverRejectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId int32 `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *DriverRejectRequest) Reset() {
	*x = DriverRejectRequest{}
	mi := &file_comm_comm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRejectRequest) ProtoMessage() {}

func (x *DriverRejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRejectRequest.ProtoReflect.Descriptor instead.
func (*DriverRejectRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{8}
}

func (x *DriverRejectRequest) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

type DriverRejectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverRejectResponse) Reset() {
	*x = DriverRejectResponse{}
	mi := &file_comm_comm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRejectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRejectResponse) ProtoMessage() {}

func (x *DriverRejectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRejectResponse.ProtoReflect.Descriptor instead.
func (*DriverRejectResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{9}
}

func (x *DriverRejectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId int32 `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *DriverCompleteRequest) Reset() {
	*x = DriverCompleteRequest{}
	mi := &file_comm_comm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCompleteRequest) ProtoMessage() {}

func (x *DriverCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCompleteRequest.ProtoReflect.Descriptor instead.
func (*DriverCompleteRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{10}
}

func (x *DriverCompleteRequest) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

type DriverCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverCompleteResponse) Reset() {
	*x = DriverCompleteResponse{}
	mi := &file_comm_comm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCompleteResponse) ProtoMessage() {}

func (x *DriverCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCompleteResponse.ProtoReflect.Descriptor instead.
func (*DriverCompleteResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{11}
}

func (x *DriverCompleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverTimeoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId int32 `protobuf:"varint,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *DriverTimeoutRequest) Reset() {
	*x = DriverTimeoutRequest{}
	mi := &file_comm_comm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverTimeoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverTimeoutRequest) ProtoMessage() {}

func (x *DriverTimeoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverTimeoutRequest.ProtoReflect.Descriptor instead.
func (*DriverTimeoutRequest) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{12}
}

func (x *DriverTimeoutRequest) GetRideId() int32 {
	if x != nil {
		return x.RideId
	}
	return 0
}

type DriverTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverTimeoutResponse) Reset() {
	*x = DriverTimeoutResponse{}
	mi := &file_comm_comm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverTimeoutResponse) ProtoMessage() {}

func (x *DriverTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comm_comm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverTimeoutResponse.ProtoReflect.Descriptor instead.
func (*DriverTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_comm_comm_proto_rawDescGZIP(), []int{13}
}

func (x *DriverTimeoutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_comm_comm_proto protoreflect.FileDescriptor

var file_comm_comm_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x63, 0x6f, 0x6d, 0x6d, 0x22, 0x6d, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x69, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x0c, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x52, 0x69, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x69, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x18, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a,
	0x13, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x2f, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x31, 0x0a, 0x15, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x32, 0x84, 0x01, 0x0a, 0x0c, 0x52, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x69, 0x64, 0x65, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x69,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52,
	0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x97, 0x03, 0x0a, 0x0d, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x64, 0x69, 0x73, 0x74, 0x73, 0x79, 0x73, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x2f, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comm_comm_proto_rawDescOnce sync.Once
	file_comm_comm_proto_rawDescData = file_comm_comm_proto_rawDesc
)

func file_comm_comm_proto_rawDescGZIP() []byte {
	file_comm_comm_proto_rawDescOnce.Do(func() {
		file_comm_comm_proto_rawDescData = protoimpl.X.CompressGZIP(file_comm_comm_proto_rawDescData)
	})
	return file_comm_comm_proto_rawDescData
}

var file_comm_comm_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_comm_comm_proto_goTypes = []any{
	(*RideRequest)(nil),              // 0: comm.RideRequest
	(*RideResponse)(nil),             // 1: comm.RideResponse
	(*RideStatusRequest)(nil),        // 2: comm.RideStatusRequest
	(*RideStatusResponse)(nil),       // 3: comm.RideStatusResponse
	(*DriverAssignmentRequest)(nil),  // 4: comm.DriverAssignmentRequest
	(*DriverAssignmentResponse)(nil), // 5: comm.DriverAssignmentResponse
	(*DriverAcceptRequest)(nil),      // 6: comm.DriverAcceptRequest
	(*DriverAcceptResponse)(nil),     // 7: comm.DriverAcceptResponse
	(*DriverRejectRequest)(nil),      // 8: comm.DriverRejectRequest
	(*DriverRejectResponse)(nil),     // 9: comm.DriverRejectResponse
	(*DriverCompleteRequest)(nil),    // 10: comm.DriverCompleteRequest
	(*DriverCompleteResponse)(nil),   // 11: comm.DriverCompleteResponse
	(*DriverTimeoutRequest)(nil),     // 12: comm.DriverTimeoutRequest
	(*DriverTimeoutResponse)(nil),    // 13: comm.DriverTimeoutResponse
}
var file_comm_comm_proto_depIdxs = []int32{
	0,  // 0: comm.RiderService.RequestRide:input_type -> comm.RideRequest
	2,  // 1: comm.RiderService.GetStatus:input_type -> comm.RideStatusRequest
	4,  // 2: comm.DriverService.AssignDriver:input_type -> comm.DriverAssignmentRequest
	10, // 3: comm.DriverService.CompleteRideRequest:input_type -> comm.DriverCompleteRequest
	6,  // 4: comm.DriverService.AcceptRideRequest:input_type -> comm.DriverAcceptRequest
	8,  // 5: comm.DriverService.RejectRideRequest:input_type -> comm.DriverRejectRequest
	12, // 6: comm.DriverService.TimeoutRideRequest:input_type -> comm.DriverTimeoutRequest
	1,  // 7: comm.RiderService.RequestRide:output_type -> comm.RideResponse
	3,  // 8: comm.RiderService.GetStatus:output_type -> comm.RideStatusResponse
	5,  // 9: comm.DriverService.AssignDriver:output_type -> comm.DriverAssignmentResponse
	11, // 10: comm.DriverService.CompleteRideRequest:output_type -> comm.DriverCompleteResponse
	7,  // 11: comm.DriverService.AcceptRideRequest:output_type -> comm.DriverAcceptResponse
	9,  // 12: comm.DriverService.RejectRideRequest:output_type -> comm.DriverRejectResponse
	13, // 13: comm.DriverService.TimeoutRideRequest:output_type -> comm.DriverTimeoutResponse
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_comm_comm_proto_init() }
func file_comm_comm_proto_init() {
	if File_comm_comm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comm_comm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_comm_comm_proto_goTypes,
		DependencyIndexes: file_comm_comm_proto_depIdxs,
		MessageInfos:      file_comm_comm_proto_msgTypes,
	}.Build()
	File_comm_comm_proto = out.File
	file_comm_comm_proto_rawDesc = nil
	file_comm_comm_proto_goTypes = nil
	file_comm_comm_proto_depIdxs = nil
}
